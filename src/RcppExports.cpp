// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// nllkLG_norm_rcpp
Rcpp::List nllkLG_norm_rcpp(arma::vec beta, double sigma, arma::vec ID, arma::mat xy, arma::mat gridc, arma::mat gridz, arma::cube& cov, arma::vec lim, arma::vec res);
RcppExport SEXP _localGibbs_nllkLG_norm_rcpp(SEXP betaSEXP, SEXP sigmaSEXP, SEXP IDSEXP, SEXP xySEXP, SEXP gridcSEXP, SEXP gridzSEXP, SEXP covSEXP, SEXP limSEXP, SEXP resSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ID(IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xy(xySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type gridc(gridcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type gridz(gridzSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type cov(covSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lim(limSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type res(resSEXP);
    rcpp_result_gen = Rcpp::wrap(nllkLG_norm_rcpp(beta, sigma, ID, xy, gridc, gridz, cov, lim, res));
    return rcpp_result_gen;
END_RCPP
}
// nllkLG_rcpp
Rcpp::List nllkLG_rcpp(arma::vec beta, double shape, double rate, arma::vec ID, arma::mat xy, std::string rdist, arma::mat truncr, arma::mat gridc, arma::mat gridz, arma::cube& cov, arma::vec lim, arma::vec res);
RcppExport SEXP _localGibbs_nllkLG_rcpp(SEXP betaSEXP, SEXP shapeSEXP, SEXP rateSEXP, SEXP IDSEXP, SEXP xySEXP, SEXP rdistSEXP, SEXP truncrSEXP, SEXP gridcSEXP, SEXP gridzSEXP, SEXP covSEXP, SEXP limSEXP, SEXP resSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ID(IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xy(xySEXP);
    Rcpp::traits::input_parameter< std::string >::type rdist(rdistSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type truncr(truncrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type gridc(gridcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type gridz(gridzSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type cov(covSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lim(limSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type res(resSEXP);
    rcpp_result_gen = Rcpp::wrap(nllkLG_rcpp(beta, shape, rate, ID, xy, rdist, truncr, gridc, gridz, cov, lim, res));
    return rcpp_result_gen;
END_RCPP
}
// rsf
double rsf(arma::rowvec xy, arma::vec beta, arma::cube& cov, arma::vec lim, arma::vec res);
RcppExport SEXP _localGibbs_rsf(SEXP xySEXP, SEXP betaSEXP, SEXP covSEXP, SEXP limSEXP, SEXP resSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type xy(xySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type cov(covSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lim(limSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type res(resSEXP);
    rcpp_result_gen = Rcpp::wrap(rsf(xy, beta, cov, lim, res));
    return rcpp_result_gen;
END_RCPP
}
// rsfvec
arma::vec rsfvec(arma::mat xy, arma::vec beta, arma::cube& cov, arma::vec lim, arma::vec res);
RcppExport SEXP _localGibbs_rsfvec(SEXP xySEXP, SEXP betaSEXP, SEXP covSEXP, SEXP limSEXP, SEXP resSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type xy(xySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type cov(covSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lim(limSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type res(resSEXP);
    rcpp_result_gen = Rcpp::wrap(rsfvec(xy, beta, cov, lim, res));
    return rcpp_result_gen;
END_RCPP
}
// scalez
arma::mat scalez(arma::mat gridc, arma::mat gridz, double r, arma::rowvec xy0, arma::rowvec xy1);
RcppExport SEXP _localGibbs_scalez(SEXP gridcSEXP, SEXP gridzSEXP, SEXP rSEXP, SEXP xy0SEXP, SEXP xy1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type gridc(gridcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type gridz(gridzSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type xy0(xy0SEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type xy1(xy1SEXP);
    rcpp_result_gen = Rcpp::wrap(scalez(gridc, gridz, r, xy0, xy1));
    return rcpp_result_gen;
END_RCPP
}
// simLG_rcpp
arma::mat simLG_rcpp(int nbObs, arma::vec beta, arma::vec allr, arma::cube& cov, arma::rowvec xy0, arma::vec lim, arma::vec res, int norm);
RcppExport SEXP _localGibbs_simLG_rcpp(SEXP nbObsSEXP, SEXP betaSEXP, SEXP allrSEXP, SEXP covSEXP, SEXP xy0SEXP, SEXP limSEXP, SEXP resSEXP, SEXP normSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nbObs(nbObsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type allr(allrSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type cov(covSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type xy0(xy0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lim(limSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type res(resSEXP);
    Rcpp::traits::input_parameter< int >::type norm(normSEXP);
    rcpp_result_gen = Rcpp::wrap(simLG_rcpp(nbObs, beta, allr, cov, xy0, lim, res, norm));
    return rcpp_result_gen;
END_RCPP
}
// simSSF_rcpp
arma::mat simSSF_rcpp(int nbObs, arma::vec beta, arma::rowvec xy1, arma::rowvec xy2, int nzeros, arma::cube cov, arma::vec lim, arma::vec res, arma::vec stepprobs, arma::vec stepbreaks, arma::vec angleprobs, arma::vec anglebreaks);
RcppExport SEXP _localGibbs_simSSF_rcpp(SEXP nbObsSEXP, SEXP betaSEXP, SEXP xy1SEXP, SEXP xy2SEXP, SEXP nzerosSEXP, SEXP covSEXP, SEXP limSEXP, SEXP resSEXP, SEXP stepprobsSEXP, SEXP stepbreaksSEXP, SEXP angleprobsSEXP, SEXP anglebreaksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nbObs(nbObsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type xy1(xy1SEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type xy2(xy2SEXP);
    Rcpp::traits::input_parameter< int >::type nzeros(nzerosSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type cov(covSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lim(limSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type res(resSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type stepprobs(stepprobsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type stepbreaks(stepbreaksSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type angleprobs(angleprobsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type anglebreaks(anglebreaksSEXP);
    rcpp_result_gen = Rcpp::wrap(simSSF_rcpp(nbObs, beta, xy1, xy2, nzeros, cov, lim, res, stepprobs, stepbreaks, angleprobs, anglebreaks));
    return rcpp_result_gen;
END_RCPP
}
// simZeros_rcpp
arma::mat simZeros_rcpp(int nzeros, arma::mat xy, arma::vec stepprobs, arma::vec stepbreaks, arma::vec angleprobs, arma::vec anglebreaks);
RcppExport SEXP _localGibbs_simZeros_rcpp(SEXP nzerosSEXP, SEXP xySEXP, SEXP stepprobsSEXP, SEXP stepbreaksSEXP, SEXP angleprobsSEXP, SEXP anglebreaksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nzeros(nzerosSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xy(xySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type stepprobs(stepprobsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type stepbreaks(stepbreaksSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type angleprobs(angleprobsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type anglebreaks(anglebreaksSEXP);
    rcpp_result_gen = Rcpp::wrap(simZeros_rcpp(nzeros, xy, stepprobs, stepbreaks, angleprobs, anglebreaks));
    return rcpp_result_gen;
END_RCPP
}
